From a82cbbe7ca0bbc59417ac32516c978c7fa6bfde0 Mon Sep 17 00:00:00 2001
From: "Erich E. Hoover" <erich.e.hoover@wine-staging.com>
Date: Mon, 23 Nov 2020 13:08:02 -0700
Subject: ntdll: Succeed with no data for NtReadFile on reparse points.

---
 dlls/ntdll/tests/file.c | 2 +-
 dlls/ntdll/unix/file.c  | 5 +++++
 server/file.c           | 1 +
 server/protocol.def     | 1 +
 4 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/dlls/ntdll/tests/file.c b/dlls/ntdll/tests/file.c
index 994bfb23a5e..45254128d45 100644
--- a/dlls/ntdll/tests/file.c
+++ b/dlls/ntdll/tests/file.c
@@ -5403,7 +5403,7 @@ static void test_reparse_points(void)
     ok(handle != INVALID_HANDLE_VALUE, "Failed to open symlink file.\n");
     todo_wine ok(GetFileSize(handle, NULL) == 0, "symlink size is not zero\n");
     bret = ReadFile(handle, &buf, sizeof(buf), &dwLen, NULL);
-    todo_wine ok(bret, "Failed to read data from the symlink.\n");
+    ok(bret, "Failed to read data from the symlink.\n");
     ok(dwLen == 0, "Length of symlink data is not zero.\n");
     CloseHandle(handle);
 
diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index 809832dc6f0..00f479109b2 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -5245,6 +5245,11 @@ NTSTATUS WINAPI NtReadFile( HANDLE handle, HANDLE event, PIO_APC_ROUTINE apc, vo
             goto done;
         }
     }
+    else if (type == FD_TYPE_SYMLINK)
+    {
+        status = STATUS_SUCCESS;
+        goto done;
+    }
 
     if (type == FD_TYPE_SERIAL && async_read && length)
     {
diff --git a/server/file.c b/server/file.c
index 1012fd4888c..38fb489df4f 100644
--- a/server/file.c
+++ b/server/file.c
@@ -300,6 +300,7 @@ static enum server_fd_type file_get_fd_type( struct fd *fd )
 {
     struct file *file = get_fd_user( fd );
 
+    if (S_ISLNK(file->mode)) return FD_TYPE_SYMLINK;
     if (S_ISREG(file->mode) || S_ISBLK(file->mode)) return FD_TYPE_FILE;
     if (S_ISDIR(file->mode)) return FD_TYPE_DIR;
     return FD_TYPE_CHAR;
diff --git a/server/protocol.def b/server/protocol.def
index 5a11c13768d..73980390f4a 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -1334,6 +1334,7 @@ enum server_fd_type
 {
     FD_TYPE_INVALID,  /* invalid file (no associated fd) */
     FD_TYPE_FILE,     /* regular file */
+    FD_TYPE_SYMLINK,  /* symbolic link */
     FD_TYPE_DIR,      /* directory */
     FD_TYPE_SOCKET,   /* socket */
     FD_TYPE_SERIAL,   /* serial port */
-- 
2.17.1

