From 3ca3985f573529e825c167e8e60d909ad3963260 Mon Sep 17 00:00:00 2001
From: "Erich E. Hoover" <erich.e.hoover@wine-staging.com>
Date: Sun, 22 Nov 2020 22:37:33 -0700
Subject: [PATCH] ntdll: Allow set_file_times_precise to work on reparse
 points.

---
 configure.ac           |  3 ++-
 dlls/ntdll/unix/file.c | 21 ++++++++++++++-------
 2 files changed, 16 insertions(+), 8 deletions(-)

diff --git a/configure.ac b/configure.ac
index 6a761565e86..2809ff48d1a 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2203,7 +2203,8 @@ AC_CHECK_FUNCS(\
 	sigprocmask \
 	symlink \
 	tcdrain \
-	thr_kill2
+	thr_kill2 \
+	utimensat
 )
 CFLAGS="$ac_save_CFLAGS"
 
diff --git a/dlls/ntdll/unix/file.c b/dlls/ntdll/unix/file.c
index ebb79c9963b..c3000b25dcd 100644
--- a/dlls/ntdll/unix/file.c
+++ b/dlls/ntdll/unix/file.c
@@ -1726,12 +1726,12 @@ static int get_file_info( const char *path, struct stat *st, ULONG *attr )
 }
 
 
-#if defined(__ANDROID__) && !defined(HAVE_FUTIMENS)
-static int futimens( int fd, const struct timespec spec[2] )
+#if !defined(HAVE_UTIMENSAT) && defined(__ANDROID__)
+static int utimensat( int fd, const char *name, const struct timespec spec[2], int flags )
 {
-    return syscall( __NR_utimensat, fd, NULL, spec, 0 );
+    return syscall( __NR_utimensat, fd, name, spec, flags );
 }
-#define HAVE_FUTIMENS
+#define HAVE_UTIMENSAT
 #endif  /* __ANDROID__ */
 
 #ifndef UTIME_OMIT
@@ -1741,7 +1741,7 @@ static int futimens( int fd, const struct timespec spec[2] )
 static BOOL set_file_times_precise( int fd, const LARGE_INTEGER *mtime,
                                     const LARGE_INTEGER *atime, NTSTATUS *status )
 {
-#ifdef HAVE_FUTIMENS
+#if defined(HAVE_FUTIMENS) || defined(HAVE_UTIMENSAT)
     struct timespec tv[2];
 
     tv[0].tv_sec = tv[1].tv_sec = 0;
@@ -1757,9 +1757,16 @@ static BOOL set_file_times_precise( int fd, const LARGE_INTEGER *mtime,
         tv[1].tv_nsec = (mtime->QuadPart % 10000000) * 100;
     }
 #ifdef __APPLE__
-    if (!&futimens) return FALSE;
+    if (!&utimensat) return FALSE;
+#endif
+#if defined(HAVE_UTIMENSAT)
+    /* futimens does not work on O_PATH|O_NOFOLLOW (O_SYMLINK) file descriptors, so if the file
+     * descriptor is for a symlink then use utimensat with an empty path (.) and do not follow the
+     * link. Since this approach works for both symlinks and regular files, just use utimensat. */
+    if (utimensat(fd, ".", tv, AT_SYMLINK_NOFOLLOW) == -1) *status = errno_to_status( errno );
+#else
+    if (futimens(fd, tv) == -1) *status = errno_to_status( errno );
 #endif
-    if (futimens( fd, tv ) == -1) *status = errno_to_status( errno );
     else *status = STATUS_SUCCESS;
     return TRUE;
 #else
-- 
2.29.2

