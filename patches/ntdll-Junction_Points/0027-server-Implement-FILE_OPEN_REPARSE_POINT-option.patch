From 8106c6932c691439b014e35d1bba16bdbeef7670 Mon Sep 17 00:00:00 2001
From: "Erich E. Hoover" <erich.e.hoover@wine-staging.com>
Date: Sun, 22 Nov 2020 22:39:48 -0700
Subject: [PATCH] server: Implement FILE_OPEN_REPARSE_POINT option.

---
 dlls/ntdll/tests/file.c | 4 ++--
 server/fd.c             | 5 +++++
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/dlls/ntdll/tests/file.c b/dlls/ntdll/tests/file.c
index 053441923b3..6a99fa94ebc 100644
--- a/dlls/ntdll/tests/file.c
+++ b/dlls/ntdll/tests/file.c
@@ -5401,8 +5401,8 @@ static void test_reparse_points(void)
     ok(handle != INVALID_HANDLE_VALUE, "Failed to open symlink file.\n");
     todo_wine ok(GetFileSize(handle, NULL) == 0, "symlink size is not zero\n");
     bret = ReadFile(handle, &buf, sizeof(buf), &dwLen, NULL);
-    ok(bret, "Failed to read data from the symlink.\n");
-    todo_wine ok(dwLen == 0, "Length of symlink data is not zero.\n");
+    todo_wine ok(bret, "Failed to read data from the symlink.\n");
+    ok(dwLen == 0, "Length of symlink data is not zero.\n");
     CloseHandle(handle);
 
     /* Check the size/data of the symlink target */
diff --git a/server/fd.c b/server/fd.c
index c3c53489212..673055718f8 100644
--- a/server/fd.c
+++ b/server/fd.c
@@ -1957,6 +1957,11 @@ struct fd *open_fd( struct fd *root, const char *name, int flags, mode_t *mode,
     }
     else rw_mode = O_RDONLY;
 
+#if defined(O_SYMLINK)
+    if ((options & FILE_OPEN_REPARSE_POINT) && !(flags & O_CREAT))
+        flags |= O_SYMLINK;
+#endif
+
     if ((fd->unix_fd = open( name, rw_mode | (flags & ~O_TRUNC), *mode )) == -1)
     {
         /* if we tried to open a directory for write access, retry read-only */
-- 
2.29.2

