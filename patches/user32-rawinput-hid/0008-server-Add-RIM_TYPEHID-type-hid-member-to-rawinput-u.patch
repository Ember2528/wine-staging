From 6b794622488eb83f6ede9d62a14f413660a2623a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Mon, 22 Mar 2021 18:28:38 +0100
Subject: [PATCH] server: Add RIM_TYPEHID type / hid member to rawinput union.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=50506
---
 server/protocol.def |  8 ++++++++
 server/trace.c      | 38 ++++++++++++++++++++++----------------
 2 files changed, 30 insertions(+), 16 deletions(-)

diff --git a/server/protocol.def b/server/protocol.def
index 9539169f1ff..f97b966719c 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -306,6 +306,14 @@ union rawinput
         int            y;       /* y coordinate */
         unsigned int   data;    /* mouse data */
     } mouse;
+    struct
+    {
+        int            type;    /* RIM_TYPEHID */
+        unsigned int   device;  /* rawinput device index */
+        unsigned int   param;   /* rawinput message param */
+        unsigned int   length;  /* HID report length */
+        /* followed by length bytes of HID report data  */
+    } hid;
 };
 
 struct hardware_msg_data
diff --git a/server/trace.c b/server/trace.c
index ce21ae4fe4f..3d24cec0133 100644
--- a/server/trace.c
+++ b/server/trace.c
@@ -409,6 +409,22 @@ static void dump_irp_params( const char *prefix, const irp_params_t *data )
     }
 }
 
+static void dump_varargs_bytes( const char *prefix, data_size_t size )
+{
+    const unsigned char *data = cur_data;
+    data_size_t len = min( 1024, size );
+
+    fprintf( stderr, "%s{", prefix );
+    while (len > 0)
+    {
+        fprintf( stderr, "%02x", *data++ );
+        if (--len) fputc( ',', stderr );
+    }
+    if (size > 1024) fprintf( stderr, "...(total %u)", size );
+    fputc( '}', stderr );
+    remove_data( size );
+}
+
 static void dump_rawinput( const char *prefix, const union rawinput *rawinput )
 {
     switch (rawinput->type)
@@ -421,6 +437,12 @@ static void dump_rawinput( const char *prefix, const union rawinput *rawinput )
         fprintf( stderr, "%s{type=KEYBOARD,message=%04x,vkey=%04hx,scan=%04hx}", prefix,
                  rawinput->kbd.message, rawinput->kbd.vkey, rawinput->kbd.scan );
         break;
+    case RIM_TYPEHID:
+        fprintf( stderr, "%s{type=HID,device=%04x,param=%04x,length=%u", prefix,
+                 rawinput->hid.device, rawinput->hid.param, rawinput->hid.length );
+        dump_varargs_bytes( ",report=", rawinput->hid.length );
+        fputc( '}', stderr );
+        break;
     default:
         fprintf( stderr, "%s{type=%04x}", prefix, rawinput->type );
         break;
@@ -580,22 +602,6 @@ static void dump_varargs_user_handles( const char *prefix, data_size_t size )
     remove_data( size );
 }
 
-static void dump_varargs_bytes( const char *prefix, data_size_t size )
-{
-    const unsigned char *data = cur_data;
-    data_size_t len = min( 1024, size );
-
-    fprintf( stderr,"%s{", prefix );
-    while (len > 0)
-    {
-        fprintf( stderr, "%02x", *data++ );
-        if (--len) fputc( ',', stderr );
-    }
-    if (size > 1024) fprintf( stderr, "...(total %u)", size );
-    fputc( '}', stderr );
-    remove_data( size );
-}
-
 static void dump_varargs_string( const char *prefix, data_size_t size )
 {
     fprintf( stderr, "%s\"%.*s\"", prefix, (int)size, (const char *)cur_data );
-- 
2.30.2

