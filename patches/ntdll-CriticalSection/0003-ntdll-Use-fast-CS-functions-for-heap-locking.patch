From 0dc447fc1d384c9412e9c8f55bfef9adfaeec994 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sat, 5 Aug 2017 03:39:23 +0200
Subject: [PATCH] ntdll: Use fast CS functions for heap locking.

---
 dlls/ntdll/heap.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/dlls/ntdll/heap.c b/dlls/ntdll/heap.c
index 1b6337d4ce8..ea2d4153b96 100644
--- a/dlls/ntdll/heap.c
+++ b/dlls/ntdll/heap.c
@@ -457,13 +457,13 @@ static inline ULONG heap_get_flags( const HEAP *heap, ULONG flags )
 static void heap_lock( HEAP *heap, ULONG flags )
 {
     if (heap_get_flags( heap, flags ) & HEAP_NO_SERIALIZE) return;
-    RtlEnterCriticalSection( &heap->cs );
+    enter_critical_section( &heap->cs );
 }
 
 static void heap_unlock( HEAP *heap, ULONG flags )
 {
     if (heap_get_flags( heap, flags ) & HEAP_NO_SERIALIZE) return;
-    RtlLeaveCriticalSection( &heap->cs );
+    leave_critical_section( &heap->cs );
 }
 
 static void heap_set_status( const HEAP *heap, ULONG flags, NTSTATUS status )
@@ -1401,9 +1401,9 @@ HANDLE WINAPI RtlCreateHeap( ULONG flags, PVOID addr, SIZE_T totalSize, SIZE_T c
     /* link it into the per-process heap list */
     if (processHeap)
     {
-        RtlEnterCriticalSection( &processHeap->cs );
+        enter_critical_section( &processHeap->cs );
         list_add_head( &processHeap->entry, &heap->entry );
-        RtlLeaveCriticalSection( &processHeap->cs );
+        leave_critical_section( &processHeap->cs );
     }
     else if (!addr)
     {
@@ -1447,9 +1447,9 @@ HANDLE WINAPI RtlDestroyHeap( HANDLE heap )
     if (heap == processHeap) return heap; /* cannot delete the main process heap */
 
     /* remove it from the per-process list */
-    RtlEnterCriticalSection( &processHeap->cs );
+    enter_critical_section( &processHeap->cs );
     list_remove( &heapPtr->entry );
-    RtlLeaveCriticalSection( &processHeap->cs );
+    leave_critical_section( &processHeap->cs );
 
     heapPtr->cs.DebugInfo->Spare[0] = 0;
     RtlDeleteCriticalSection( &heapPtr->cs );
@@ -1930,7 +1930,7 @@ ULONG WINAPI RtlGetProcessHeaps( ULONG count, HANDLE *heaps )
     ULONG total = 1;  /* main heap */
     struct list *ptr;
 
-    RtlEnterCriticalSection( &processHeap->cs );
+    enter_critical_section( &processHeap->cs );
     LIST_FOR_EACH( ptr, &processHeap->entry ) total++;
     if (total <= count)
     {
@@ -1938,7 +1938,7 @@ ULONG WINAPI RtlGetProcessHeaps( ULONG count, HANDLE *heaps )
         LIST_FOR_EACH( ptr, &processHeap->entry )
             *heaps++ = LIST_ENTRY( ptr, HEAP, entry );
     }
-    RtlLeaveCriticalSection( &processHeap->cs );
+    leave_critical_section( &processHeap->cs );
     return total;
 }
 
-- 
2.35.1

