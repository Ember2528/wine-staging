From 221174d37d4029950f900268a7093e3d48dd078f Mon Sep 17 00:00:00 2001
From: Esdras Tarsis <esdrastarsis@gmail.com>
Date: Wed, 2 Sep 2020 23:53:28 -0300
Subject: [PATCH 2/3] windows.networking.connectivity: Implement
 IActivationFactory stubs.

Signed-off-by: Esdras Tarsis <esdrastarsis@gmail.com>
---
 .../windows.networking.connectivity_main.c    | 90 ++++++++++++++++++-
 1 file changed, 88 insertions(+), 2 deletions(-)

diff --git a/dlls/windows.networking.connectivity.dll/windows.networking.connectivity_main.c b/dlls/windows.networking.connectivity.dll/windows.networking.connectivity_main.c
index 8737ac441bc..8ed544e5644 100644
--- a/dlls/windows.networking.connectivity.dll/windows.networking.connectivity_main.c
+++ b/dlls/windows.networking.connectivity.dll/windows.networking.connectivity_main.c
@@ -20,6 +20,90 @@ static const char *debugstr_hstring(HSTRING hstr)
     return wine_dbgstr_wn(str, len);
 }
 
+struct windows_networking_connectivity
+{
+    IActivationFactory IActivationFactory_iface;
+    LONG refcount;
+};
+
+static inline struct windows_networking_connectivity *impl_from_IActivationFactory(IActivationFactory *iface)
+{
+    return CONTAINING_RECORD(iface, struct windows_networking_connectivity, IActivationFactory_iface);
+}
+
+static HRESULT STDMETHODCALLTYPE windows_networking_connectivity_QueryInterface(
+        IActivationFactory *iface, REFIID iid, void **object)
+{
+    TRACE("iface %p, iid %s, object %p stub!\n", iface, debugstr_guid(iid), object);
+    *object = NULL;
+    return E_NOINTERFACE;
+}
+
+static ULONG STDMETHODCALLTYPE windows_networking_connectivity_AddRef(
+        IActivationFactory *iface)
+{
+    struct windows_networking_connectivity *impl = impl_from_IActivationFactory(iface);
+    ULONG rc = InterlockedIncrement(&impl->refcount);
+    TRACE("%p increasing refcount to %u.\n", impl, rc);
+    return rc;
+}
+
+static ULONG STDMETHODCALLTYPE windows_networking_connectivity_Release(
+        IActivationFactory *iface)
+{
+    struct windows_networking_connectivity *impl = impl_from_IActivationFactory(iface);
+    ULONG rc = InterlockedDecrement(&impl->refcount);
+    TRACE("%p decreasing refcount to %u.\n", impl, rc);
+    return rc;
+}
+
+static HRESULT STDMETHODCALLTYPE windows_networking_connectivity_GetIids(
+        IActivationFactory *iface, ULONG *iid_count, IID **iids)
+{
+    FIXME("iface %p, iid_count %p, iids %p stub!\n", iface, iid_count, iids);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE windows_networking_connectivity_GetRuntimeClassName(
+        IActivationFactory *iface, HSTRING *class_name)
+{
+    FIXME("iface %p, class_name %p stub!\n", iface, class_name);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE windows_networking_connectivity_GetTrustLevel(
+        IActivationFactory *iface, TrustLevel *trust_level)
+{
+    FIXME("iface %p, trust_level %p stub!\n", iface, trust_level);
+    return E_NOTIMPL;
+}
+
+static HRESULT STDMETHODCALLTYPE windows_networking_connectivity_ActivateInstance(
+        IActivationFactory *iface, IInspectable **instance)
+{
+    FIXME("iface %p, instance %p stub!\n", iface, instance);
+    return E_NOTIMPL;
+}
+
+static const struct IActivationFactoryVtbl activation_factory_vtbl =
+{
+    windows_networking_connectivity_QueryInterface,
+    windows_networking_connectivity_AddRef,
+    windows_networking_connectivity_Release,
+    /* IInspectable methods */
+    windows_networking_connectivity_GetIids,
+    windows_networking_connectivity_GetRuntimeClassName,
+    windows_networking_connectivity_GetTrustLevel,
+    /* IActivationFactory methods */
+    windows_networking_connectivity_ActivateInstance,
+};
+
+static struct windows_networking_connectivity windows_networking_connectivity =
+{
+    {&activation_factory_vtbl},
+    0
+};
+
 BOOL WINAPI DllMain(HINSTANCE instance, DWORD reason, void *reserved)
 {
     TRACE("(%p, %u, %p)\n", instance, reason, reserved);
@@ -49,6 +133,8 @@ HRESULT WINAPI DllGetClassObject(REFCLSID clsid, REFIID riid, LPVOID *object)
 
 HRESULT WINAPI DllGetActivationFactory(HSTRING classid, IActivationFactory **factory)
 {
-    FIXME("classid %s, factory %p stub!\n", debugstr_hstring(classid), factory);
-    return E_NOINTERFACE;
+    TRACE("classid %s, factory %p.\n", debugstr_hstring(classid), factory);
+    *factory = &windows_networking_connectivity.IActivationFactory_iface;
+    IUnknown_AddRef(*factory);
+    return S_OK;
 }
\ No newline at end of file
-- 
2.28.0

