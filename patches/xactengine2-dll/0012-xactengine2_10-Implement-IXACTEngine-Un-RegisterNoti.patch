From 7b7912c5dbd542e87ffc2bc78c0388ef8ad6a219 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Fri, 18 Sep 2020 17:39:44 +0200
Subject: [PATCH 12/23] xactengine2_10: Implement
 IXACTEngine::(Un)RegisterNotification function(s).

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
---
 dlls/xactengine2_10/xact2_dll.c | 107 ++++++++++++++++++++++++++++++--
 1 file changed, 102 insertions(+), 5 deletions(-)

diff --git a/dlls/xactengine2_10/xact2_dll.c b/dlls/xactengine2_10/xact2_dll.c
index 2e06341b5e9..aada1cf53e9 100644
--- a/dlls/xactengine2_10/xact2_dll.c
+++ b/dlls/xactengine2_10/xact2_dll.c
@@ -604,7 +604,7 @@ static HRESULT WINAPI IXACTWaveBankImpl_Play(IXACTWaveBank *iface,
         if (!wave)
         {
             FACTWave_Destroy(fwave);
-            ERR("Failed to allocate XACT3WaveImpl!");
+            ERR("Failed to allocate XACTWaveImpl!");
             return E_OUTOFMEMORY;
         }
 
@@ -998,20 +998,117 @@ static HRESULT WINAPI IXACTEngineImpl_PrepareWave(IXACTEngine *iface,
     return E_NOTIMPL;
 }
 
+enum {
+    NOTIFY_SoundBank = 0x01,
+    NOTIFY_WaveBank  = 0x02,
+    NOTIFY_Cue       = 0x04,
+    NOTIFY_Wave      = 0x08,
+    NOTIFY_cueIndex  = 0x10,
+    NOTIFY_waveIndex = 0x20
+};
+
+static inline void unwrap_notificationdesc(FACTNotificationDescription *fd,
+        const XACT_NOTIFICATION_DESCRIPTION *xd)
+{
+    DWORD flags = 0;
+
+    TRACE("Type %d\n", xd->type);
+
+    memset(fd, 0, sizeof(*fd));
+
+    /* Supports SoundBank, Cue index, Cue instance */
+    if (xd->type == XACTNOTIFICATIONTYPE_CUEPREPARED || xd->type == XACTNOTIFICATIONTYPE_CUEPLAY ||
+        xd->type == XACTNOTIFICATIONTYPE_CUESTOP || xd->type == XACTNOTIFICATIONTYPE_CUEDESTROYED ||
+        xd->type == XACTNOTIFICATIONTYPE_MARKER || xd->type == XACTNOTIFICATIONTYPE_LOCALVARIABLECHANGED)
+    {
+        flags = NOTIFY_SoundBank | NOTIFY_cueIndex | NOTIFY_Cue;
+    }
+    /* Supports WaveBank */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEBANKDESTROYED || xd->type == XACTNOTIFICATIONTYPE_WAVEBANKPREPARED ||
+             xd->type == XACTNOTIFICATIONTYPE_WAVEBANKSTREAMING_INVALIDCONTENT)
+    {
+        flags = NOTIFY_WaveBank;
+    }
+    /* Supports NOTIFY_SoundBank */
+    else if (xd->type == XACTNOTIFICATIONTYPE_SOUNDBANKDESTROYED)
+    {
+        flags = NOTIFY_SoundBank;
+    }
+    /* Supports WaveBank, Wave index, Wave instance */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEPREPARED || xd->type == XACTNOTIFICATIONTYPE_WAVEDESTROYED)
+    {
+        flags = NOTIFY_WaveBank | NOTIFY_waveIndex | NOTIFY_Wave;
+    }
+    /* Supports SoundBank, SoundBank, Cue index, Cue instance, WaveBank, Wave instance */
+    else if (xd->type == XACTNOTIFICATIONTYPE_WAVEPLAY || xd->type == XACTNOTIFICATIONTYPE_WAVESTOP ||
+             xd->type == XACTNOTIFICATIONTYPE_WAVELOOPED)
+    {
+        flags = NOTIFY_SoundBank | NOTIFY_cueIndex | NOTIFY_Cue | NOTIFY_WaveBank | NOTIFY_Wave;
+    }
+
+    /* We have to unwrap the FACT object first! */
+    fd->type = xd->type;
+    fd->flags = xd->flags;
+    fd->pvContext = xd->pvContext;
+    if (flags & NOTIFY_cueIndex)
+        fd->cueIndex = xd->cueIndex;
+    if (flags & NOTIFY_waveIndex)
+        fd->waveIndex = xd->waveIndex;
+
+    if (flags & NOTIFY_Cue && xd->pCue != NULL)
+    {
+        XACTCueImpl *cue = impl_from_IXACTCue(xd->pCue);
+        if (cue)
+            fd->pCue = cue->fact_cue;
+    }
+
+    if (flags & NOTIFY_SoundBank && xd->pSoundBank != NULL)
+    {
+        XACTSoundBankImpl *sound = impl_from_IXACTSoundBank(xd->pSoundBank);
+        if (sound)
+            fd->pSoundBank = sound->fact_soundbank;
+    }
+
+    if (flags & NOTIFY_WaveBank && xd->pWaveBank != NULL)
+    {
+        XACTWaveBankImpl *bank = impl_from_IXACTWaveBank(xd->pWaveBank);
+        if (bank)
+            fd->pWaveBank = bank->fact_wavebank;
+    }
+
+    if (flags & NOTIFY_Wave && xd->pWave != NULL)
+    {
+        XACTWaveImpl *wave = impl_from_IXACTWave(xd->pWave);
+        if (wave)
+            fd->pWave = wave->fact_wave;
+    }
+}
+
 static HRESULT WINAPI IXACTEngineImpl_RegisterNotification(IXACTEngine *iface,
         const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
 {
     XACTEngineImpl *This = impl_from_IXACTEngine(iface);
-    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
-    return E_NOTIMPL;
+    FACTNotificationDescription fdesc;
+
+    TRACE("(%p)->(%p)\n", This, pNotificationDesc);
+
+    unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    fdesc.pvContext = This;
+    return FACTAudioEngine_RegisterNotification(This->fact_engine, &fdesc);
 }
 
 static HRESULT WINAPI IXACTEngineImpl_UnRegisterNotification(IXACTEngine *iface,
         const XACT_NOTIFICATION_DESCRIPTION *pNotificationDesc)
 {
     XACTEngineImpl *This = impl_from_IXACTEngine(iface);
-    FIXME("(%p)->(%p): stub!\n", This, pNotificationDesc);
-    return E_NOTIMPL;
+    FACTNotificationDescription fdesc;
+
+    TRACE("(%p)->(%p)\n", This, pNotificationDesc);
+
+    unwrap_notificationdesc(&fdesc, pNotificationDesc);
+    fdesc.pvContext = This;
+    return FACTAudioEngine_UnRegisterNotification(This->fact_engine, &fdesc);
+
 }
 
 static XACTCATEGORY WINAPI IXACTEngineImpl_GetCategory(IXACTEngine *iface,
-- 
2.28.0

