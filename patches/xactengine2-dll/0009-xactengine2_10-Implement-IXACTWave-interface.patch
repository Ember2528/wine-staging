From 920705457c0ab3e3e4bbe08193b5fef3dfaf92ab Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Fri, 18 Sep 2020 17:20:37 +0200
Subject: [PATCH 09/23] xactengine2_10: Implement IXACTWave interface.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
---
 dlls/xactengine2_10/xact2_dll.c | 147 +++++++++++++++++++++++++++++++-
 1 file changed, 144 insertions(+), 3 deletions(-)

diff --git a/dlls/xactengine2_10/xact2_dll.c b/dlls/xactengine2_10/xact2_dll.c
index ec7a97dd5f8..793cfc62afb 100644
--- a/dlls/xactengine2_10/xact2_dll.c
+++ b/dlls/xactengine2_10/xact2_dll.c
@@ -335,6 +335,120 @@ static const IXACTSoundBankVtbl XACTSoundBank_Vtbl =
     IXACTSoundBankImpl_GetState
 };
 
+typedef struct _XACTWaveImpl {
+    IXACTWave IXACTWave_iface;
+
+    FACTWave *fact_wave;
+} XACTWaveImpl;
+
+static inline XACTWaveImpl *impl_from_IXACTWave(IXACTWave *iface)
+{
+    return CONTAINING_RECORD(iface, XACTWaveImpl, IXACTWave_iface);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_Destroy(IXACTWave *iface)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", This);
+
+    hr = FACTWave_Destroy(This->fact_wave);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACTWaveImpl_Play(IXACTWave *iface)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)\n", This);
+
+    return FACTWave_Play(This->fact_wave);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_Stop(IXACTWave *iface, DWORD dwFlags)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(0x%x)\n", This, dwFlags);
+
+    return FACTWave_Stop(This->fact_wave, dwFlags);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_Pause(IXACTWave *iface, BOOL fPause)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%u)\n", This, fPause);
+
+    return FACTWave_Pause(This->fact_wave, fPause);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_GetState(IXACTWave *iface, DWORD *pdwState)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%p)\n", This, pdwState);
+
+    return FACTWave_GetState(This->fact_wave, pdwState);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_SetPitch(IXACTWave *iface, XACTPITCH pitch)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%d)\n", This, pitch);
+
+    return FACTWave_SetPitch(This->fact_wave, pitch);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_SetVolume(IXACTWave *iface, XACTVOLUME volume)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%f)\n", This, volume);
+
+    return FACTWave_SetVolume(This->fact_wave, volume);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_SetMatrixCoefficients(IXACTWave *iface,
+        UINT32 uSrcChannelCount, UINT32 uDstChannelCount,
+        float *pMatrixCoefficients)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%u, %u, %p)\n", This, uSrcChannelCount, uDstChannelCount,
+            pMatrixCoefficients);
+
+    return FACTWave_SetMatrixCoefficients(This->fact_wave, uSrcChannelCount,
+            uDstChannelCount, pMatrixCoefficients);
+}
+
+static HRESULT WINAPI IXACTWaveImpl_GetProperties(IXACTWave *iface,
+    XACT_WAVE_INSTANCE_PROPERTIES *pProperties)
+{
+    XACTWaveImpl *This = impl_from_IXACTWave(iface);
+
+    TRACE("(%p)->(%p)\n", This, pProperties);
+
+    return FACTWave_GetProperties(This->fact_wave,
+            (FACTWaveInstanceProperties*) pProperties);
+}
+
+static const IXACTWaveVtbl XACTWave_Vtbl =
+{
+    IXACTWaveImpl_Destroy,
+    IXACTWaveImpl_Play,
+    IXACTWaveImpl_Stop,
+    IXACTWaveImpl_Pause,
+    IXACTWaveImpl_GetState,
+    IXACTWaveImpl_SetPitch,
+    IXACTWaveImpl_SetVolume,
+    IXACTWaveImpl_SetMatrixCoefficients,
+    IXACTWaveImpl_GetProperties
+};
+
 typedef struct _XACTWaveBankImpl {
     IXACTWaveBank IXACTWaveBank_iface;
 
@@ -394,9 +508,36 @@ static HRESULT WINAPI IXACTWaveBankImpl_Prepare(IXACTWaveBank *iface,
         XACTLOOPCOUNT nLoopCount, IXACTWave** ppWave)
 {
     XACTWaveBankImpl *This = impl_from_IXACTWaveBank(iface);
-    FIXME("(%p)->(0x%x, %u, 0x%x, %u, %p): stub!\n", This, nWaveIndex, dwFlags,
+    XACTWaveImpl *wave;
+    FACTWave *fwave;
+    UINT ret;
+
+    TRACE("(%p)->(0x%x, %u, 0x%x, %u, %p)\n", This, nWaveIndex, dwFlags,
             dwPlayOffset, nLoopCount, ppWave);
-    return E_NOTIMPL;
+
+    ret = FACTWaveBank_Prepare(This->fact_wavebank, nWaveIndex, dwFlags,
+            dwPlayOffset, nLoopCount, &fwave);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateWave: %d\n", ret);
+        return E_FAIL;
+    }
+
+    wave = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*wave));
+    if (!wave)
+    {
+        FACTWave_Destroy(fwave);
+        ERR("Failed to allocate XACTWaveImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    wave->IXACTWave_iface.lpVtbl = &XACTWave_Vtbl;
+    wave->fact_wave = fwave;
+    *ppWave = &wave->IXACTWave_iface;
+
+    TRACE("Created Wave: %p\n", wave);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACTWaveBankImpl_Play(IXACTWaveBank *iface,
@@ -747,7 +888,7 @@ static HRESULT WINAPI IXACTEngineImpl_CreateStreamingWaveBank(IXACTEngine *iface
     if (!wb)
     {
         FACTWaveBank_Destroy(fwb);
-        ERR("Failed to allocate XACT3WaveBankImpl!");
+        ERR("Failed to allocate XACTWaveBankImpl!");
         return E_OUTOFMEMORY;
     }
 
-- 
2.28.0

