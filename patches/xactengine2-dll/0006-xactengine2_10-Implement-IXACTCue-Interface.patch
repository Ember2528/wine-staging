From 3920774c38e83f14cc550de078b7601017099181 Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Fri, 18 Sep 2020 16:46:31 +0200
Subject: [PATCH 06/23] xactengine2_10: Implement IXACTCue Interface.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
---
 dlls/xactengine2_10/xact2_dll.c | 201 +++++++++++++++++++++++++++++++-
 1 file changed, 199 insertions(+), 2 deletions(-)

diff --git a/dlls/xactengine2_10/xact2_dll.c b/dlls/xactengine2_10/xact2_dll.c
index 98193498e49..c425fe091db 100644
--- a/dlls/xactengine2_10/xact2_dll.c
+++ b/dlls/xactengine2_10/xact2_dll.c
@@ -32,6 +32,176 @@ WINE_DEFAULT_DEBUG_CHANNEL(xact3);
 
 static HINSTANCE instance;
 
+typedef struct _XACTCueImpl {
+    IXACTCue IXACTCue_iface;
+    FACTCue *fact_cue;
+} XACTCueImpl;
+
+static inline XACTCueImpl *impl_from_IXACTCue(IXACTCue *iface)
+{
+    return CONTAINING_RECORD(iface, XACTCueImpl, IXACTCue_iface);
+}
+
+static HRESULT WINAPI IXACTCueImpl_Play(IXACTCue *iface)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)\n", iface);
+
+    return FACTCue_Play(This->fact_cue);
+}
+
+static HRESULT WINAPI IXACTCueImpl_Stop(IXACTCue *iface, DWORD dwFlags)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%u)\n", iface, dwFlags);
+
+    return FACTCue_Stop(This->fact_cue, dwFlags);
+}
+
+static HRESULT WINAPI IXACTCueImpl_GetState(IXACTCue *iface, DWORD *pdwState)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%p)\n", iface, pdwState);
+
+    return FACTCue_GetState(This->fact_cue, pdwState);
+}
+
+static HRESULT WINAPI IXACTCueImpl_Destroy(IXACTCue *iface)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    UINT ret;
+
+    TRACE("(%p)\n", iface);
+
+    ret = FACTCue_Destroy(This->fact_cue);
+    if (ret != 0)
+        WARN("FACTCue_Destroy returned %d\n", ret);
+    HeapFree(GetProcessHeap(), 0, This);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACTCueImpl_GetChannelMap(IXACTCue *iface,
+        LPXACTCHANNELMAP pChannelMap, DWORD BufferSize, LPDWORD pRequiredSize)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    FIXME("(%p)->(%p %d %p): stub!\n", This, pChannelMap, BufferSize, pRequiredSize);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACTCueImpl_SetChannelMap(IXACTCue *iface,
+        LPXACTCHANNELMAP pChannelMap)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    FIXME("(%p)->(%p): stub!\n", This, pChannelMap);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACTCueImpl_GetChannelVolume(IXACTCue *iface,
+        LPXACTCHANNELVOLUME pVolume)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    FIXME("(%p)->(%p): stub!\n", This, pVolume);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACTCueImpl_SetChannelVolume(IXACTCue *iface,
+        LPXACTCHANNELVOLUME pVolume)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    FIXME("(%p)->(%p): stub!\n", This, pVolume);
+    return S_OK;
+}
+
+static HRESULT WINAPI IXACTCueImpl_SetMatrixCoefficients(IXACTCue *iface,
+        UINT32 uSrcChannelCount, UINT32 uDstChannelCount,
+        float *pMatrixCoefficients)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%u, %u, %p)\n", iface, uSrcChannelCount, uDstChannelCount,
+            pMatrixCoefficients);
+
+    return FACTCue_SetMatrixCoefficients(This->fact_cue, uSrcChannelCount,
+        uDstChannelCount, pMatrixCoefficients);
+}
+
+static XACTVARIABLEINDEX WINAPI IXACTCueImpl_GetVariableIndex(IXACTCue *iface,
+        PCSTR szFriendlyName)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%s)\n", iface, szFriendlyName);
+
+    return FACTCue_GetVariableIndex(This->fact_cue, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACTCueImpl_SetVariable(IXACTCue *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE nValue)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%u, %f)\n", iface, nIndex, nValue);
+
+    return FACTCue_SetVariable(This->fact_cue, nIndex, nValue);
+}
+
+static HRESULT WINAPI IXACTCueImpl_GetVariable(IXACTCue *iface,
+        XACTVARIABLEINDEX nIndex, XACTVARIABLEVALUE *nValue)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%u, %p)\n", iface, nIndex, nValue);
+
+    return FACTCue_GetVariable(This->fact_cue, nIndex, nValue);
+}
+
+static HRESULT WINAPI IXACTCueImpl_Pause(IXACTCue *iface, BOOL fPause)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+
+    TRACE("(%p)->(%u)\n", iface, fPause);
+
+    return FACTCue_Pause(This->fact_cue, fPause);
+}
+
+static HRESULT WINAPI IXACTCueImpl_GetProperties(IXACTCue *iface,
+        XACT_CUE_INSTANCE_PROPERTIES **ppProperties)
+{
+    XACTCueImpl *This = impl_from_IXACTCue(iface);
+    FACTCueInstanceProperties *fProps;
+    HRESULT hr;
+
+    TRACE("(%p)->(%p)\n", iface, ppProperties);
+
+    hr = FACTCue_GetProperties(This->fact_cue, &fProps);
+    if(FAILED(hr))
+        return hr;
+
+    *ppProperties = (XACT_CUE_INSTANCE_PROPERTIES*) fProps;
+    return hr;
+}
+
+static const IXACTCueVtbl XACTCue_Vtbl =
+{
+    IXACTCueImpl_Play,
+    IXACTCueImpl_Stop,
+    IXACTCueImpl_GetState,
+    IXACTCueImpl_Destroy,
+    IXACTCueImpl_GetChannelMap,
+    IXACTCueImpl_SetChannelMap,
+    IXACTCueImpl_GetChannelVolume,
+    IXACTCueImpl_SetChannelVolume,
+    IXACTCueImpl_SetMatrixCoefficients,
+    IXACTCueImpl_GetVariableIndex,
+    IXACTCueImpl_SetVariable,
+    IXACTCueImpl_GetVariable,
+    IXACTCueImpl_Pause,
+    IXACTCueImpl_GetProperties
+};
+
 typedef struct _XACTSoundBankImpl {
     IXACTSoundBank IXACTSoundBank_iface;
 
@@ -79,9 +249,36 @@ static HRESULT WINAPI IXACTSoundBankImpl_Prepare(IXACTSoundBank *iface,
         IXACTCue** ppCue)
 {
     XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
-    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+    XACTCueImpl *cue;
+    FACTCue *fcue;
+    UINT ret;
+
+    TRACE("(%p)->(%u, 0x%x, %u, %p)\n", This, nCueIndex, dwFlags, timeOffset,
             ppCue);
-    return E_NOTIMPL;
+
+    ret = FACTSoundBank_Prepare(This->fact_soundbank, nCueIndex, dwFlags,
+            timeOffset, &fcue);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateCue: %d\n", ret);
+        return E_FAIL;
+    }
+
+    cue = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*cue));
+    if (!cue)
+    {
+        FACTCue_Destroy(fcue);
+        ERR("Failed to allocate XACTCueImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    cue->IXACTCue_iface.lpVtbl = &XACTCue_Vtbl;
+    cue->fact_cue = fcue;
+    *ppCue = &cue->IXACTCue_iface;
+
+    TRACE("Created Cue: %p\n", cue);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACTSoundBankImpl_Play(IXACTSoundBank *iface,
-- 
2.28.0

