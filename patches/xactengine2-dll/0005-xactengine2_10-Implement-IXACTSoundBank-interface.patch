From 31d429746d85fbfa60cab01f4cb7ad2981e57d7e Mon Sep 17 00:00:00 2001
From: Vijay Kiran Kamuju <infyquest@gmail.com>
Date: Fri, 18 Sep 2020 13:36:05 +0200
Subject: [PATCH 05/23] xactengine2_10: Implement IXACTSoundBank interface.

Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
---
 dlls/xactengine2_10/xact2_dll.c | 139 +++++++++++++++++++++++++++++++-
 1 file changed, 136 insertions(+), 3 deletions(-)

diff --git a/dlls/xactengine2_10/xact2_dll.c b/dlls/xactengine2_10/xact2_dll.c
index 08275a19f5c..98193498e49 100644
--- a/dlls/xactengine2_10/xact2_dll.c
+++ b/dlls/xactengine2_10/xact2_dll.c
@@ -32,6 +32,112 @@ WINE_DEFAULT_DEBUG_CHANNEL(xact3);
 
 static HINSTANCE instance;
 
+typedef struct _XACTSoundBankImpl {
+    IXACTSoundBank IXACTSoundBank_iface;
+
+    FACTSoundBank *fact_soundbank;
+} XACTSoundBankImpl;
+
+static inline XACTSoundBankImpl *impl_from_IXACTSoundBank(IXACTSoundBank *iface)
+{
+    return CONTAINING_RECORD(iface, XACTSoundBankImpl, IXACTSoundBank_iface);
+}
+
+static XACTINDEX WINAPI IXACTSoundBankImpl_GetCueIndex(IXACTSoundBank *iface,
+        PCSTR szFriendlyName)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+
+    TRACE("(%p)->(%s)\n", This, szFriendlyName);
+
+    return FACTSoundBank_GetCueIndex(This->fact_soundbank, szFriendlyName);
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_GetNumCues(IXACTSoundBank *iface,
+        XACTINDEX *pnNumCues)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pnNumCues);
+
+    return FACTSoundBank_GetNumCues(This->fact_soundbank, pnNumCues);
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_GetCueProperties(IXACTSoundBank *iface,
+        XACTINDEX nCueIndex, XACT_CUE_PROPERTIES *pProperties)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+
+    TRACE("(%p)->(%u, %p)\n", This, nCueIndex, pProperties);
+
+    return FACTSoundBank_GetCueProperties(This->fact_soundbank, nCueIndex,
+            (FACTCueProperties*) pProperties);
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_Prepare(IXACTSoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset,
+        IXACTCue** ppCue)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+            ppCue);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_Play(IXACTSoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags, XACTTIME timeOffset,
+        IXACTCue** ppCue)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+    FIXME("(%p)->(%u, 0x%x, %u, %p): stub!\n", This, nCueIndex, dwFlags, timeOffset,
+            ppCue);
+    return E_NOTIMPL;
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_Stop(IXACTSoundBank *iface,
+        XACTINDEX nCueIndex, DWORD dwFlags)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+
+    TRACE("(%p)->(%u)\n", This, dwFlags);
+
+    return FACTSoundBank_Stop(This->fact_soundbank, nCueIndex, dwFlags);
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_Destroy(IXACTSoundBank *iface)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+    HRESULT hr;
+
+    TRACE("(%p)\n", This);
+
+    hr = FACTSoundBank_Destroy(This->fact_soundbank);
+    HeapFree(GetProcessHeap(), 0, This);
+    return hr;
+}
+
+static HRESULT WINAPI IXACTSoundBankImpl_GetState(IXACTSoundBank *iface,
+        DWORD *pdwState)
+{
+    XACTSoundBankImpl *This = impl_from_IXACTSoundBank(iface);
+
+    TRACE("(%p)->(%p)\n", This, pdwState);
+
+    return FACTSoundBank_GetState(This->fact_soundbank, pdwState);
+}
+
+static const IXACTSoundBankVtbl XACTSoundBank_Vtbl =
+{
+    IXACTSoundBankImpl_GetCueIndex,
+    IXACTSoundBankImpl_GetNumCues,
+    IXACTSoundBankImpl_GetCueProperties,
+    IXACTSoundBankImpl_Prepare,
+    IXACTSoundBankImpl_Play,
+    IXACTSoundBankImpl_Stop,
+    IXACTSoundBankImpl_Destroy,
+    IXACTSoundBankImpl_GetState
+};
+
 typedef struct _XACTEngineImpl {
     IXACTEngine IXACTEngine_iface;
 
@@ -184,7 +290,7 @@ static HRESULT WINAPI IXACTEngineImpl_Initialize(IXACTEngine *iface,
     params.globalSettingsBufferSize = pParams->globalSettingsBufferSize;
     params.globalSettingsFlags = pParams->globalSettingsFlags;
     params.globalSettingsAllocAttributes = pParams->globalSettingsAllocAttributes;
-    params.pRendererID = pParams->pRendererID;
+    params.pRendererID = (INT16 *) pParams->pRendererID;
     params.pXAudio2 = NULL;
     params.pMasteringVoice = NULL;
 
@@ -234,9 +340,36 @@ static HRESULT WINAPI IXACTEngineImpl_CreateSoundBank(IXACTEngine *iface,
         DWORD dwAllocAttributes, IXACTSoundBank **ppSoundBank)
 {
     XACTEngineImpl *This = impl_from_IXACTEngine(iface);
-    FIXME("(%p)->(%p, %u, 0x%x, 0x%x, %p): stub!\n", This, pvBuffer, dwSize, dwFlags,
+    XACTSoundBankImpl *sb;
+    FACTSoundBank *fsb;
+    UINT ret;
+
+    TRACE("(%p)->(%p, %u, 0x%x, 0x%x, %p)\n", This, pvBuffer, dwSize, dwFlags,
             dwAllocAttributes, ppSoundBank);
-    return E_NOTIMPL;
+
+    ret = FACTAudioEngine_CreateSoundBank(This->fact_engine, pvBuffer, dwSize,
+            dwFlags, dwAllocAttributes, &fsb);
+    if(ret != 0)
+    {
+        ERR("Failed to CreateSoundBank: %d\n", ret);
+        return E_FAIL;
+    }
+
+    sb = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*sb));
+    if (!sb)
+    {
+        FACTSoundBank_Destroy(fsb);
+        ERR("Failed to allocate XACTSoundBankImpl!");
+        return E_OUTOFMEMORY;
+    }
+
+    sb->IXACTSoundBank_iface.lpVtbl = &XACTSoundBank_Vtbl;
+    sb->fact_soundbank = fsb;
+    *ppSoundBank = &sb->IXACTSoundBank_iface;
+
+    TRACE("Created SoundBank: %p\n", sb);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI IXACTEngineImpl_CreateInMemoryWaveBank(IXACTEngine *iface,
-- 
2.28.0

