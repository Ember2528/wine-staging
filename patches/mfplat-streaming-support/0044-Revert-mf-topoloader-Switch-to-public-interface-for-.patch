From 7520143f940aefca819b2fa734e3dc9777f67d1c Mon Sep 17 00:00:00 2001
From: Derek Lesho <dlesho@codeweavers.com>
Date: Tue, 11 Aug 2020 15:59:13 -0500
Subject: [PATCH] Revert "mf/topoloader: Switch to public interface for initial
 topology validation."

This reverts commit 8e343024b577892bd4908304ded34b758579698d.
---
 dlls/mf/topology.c | 36 ++++++++++++------------------------
 1 file changed, 12 insertions(+), 24 deletions(-)

diff --git a/dlls/mf/topology.c b/dlls/mf/topology.c
index 8522f569691..abe66c45fd4 100644
--- a/dlls/mf/topology.c
+++ b/dlls/mf/topology.c
@@ -1936,50 +1936,38 @@ static ULONG WINAPI topology_loader_Release(IMFTopoLoader *iface)
 static HRESULT WINAPI topology_loader_Load(IMFTopoLoader *iface, IMFTopology *input_topology,
         IMFTopology **output_topology, IMFTopology *current_topology)
 {
-    MF_TOPOLOGY_TYPE node_type;
-    IMFTopologyNode *node;
-    unsigned short i = 0;
+    struct topology *topology = unsafe_impl_from_IMFTopology(input_topology);
     IMFStreamSink *sink;
-    IUnknown *object;
-    HRESULT hr = E_FAIL;
+    HRESULT hr;
+    size_t i;
 
     FIXME("%p, %p, %p, %p.\n", iface, input_topology, output_topology, current_topology);
 
     if (current_topology)
         FIXME("Current topology instance is ignored.\n");
 
-    /* Basic sanity checks for input topology:
-
-       - source nodes must have stream descriptor set;
-       - sink nodes must be resolved to stream sink objects;
-    */
-    while (SUCCEEDED(IMFTopology_GetNode(input_topology, i++, &node)))
+    for (i = 0; i < topology->nodes.count; ++i)
     {
-        IMFTopologyNode_GetNodeType(node, &node_type);
+        struct topology_node *node = topology->nodes.nodes[i];
 
-        switch (node_type)
+        switch (node->node_type)
         {
             case MF_TOPOLOGY_OUTPUT_NODE:
-                if (SUCCEEDED(hr = IMFTopologyNode_GetObject(node, &object)))
+                if (node->object)
                 {
                     /* Sinks must be bound beforehand. */
-                    if (FAILED(IUnknown_QueryInterface(object, &IID_IMFStreamSink, (void **)&sink)))
-                        hr = MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
-                    else if (sink)
-                        IMFStreamSink_Release(sink);
-                    IUnknown_Release(object);
+                    if (FAILED(IUnknown_QueryInterface(node->object, &IID_IMFStreamSink, (void **)&sink)))
+                        return MF_E_TOPO_SINK_ACTIVATES_UNSUPPORTED;
+                    IMFStreamSink_Release(sink);
                 }
                 break;
             case MF_TOPOLOGY_SOURCESTREAM_NODE:
-                hr = IMFTopologyNode_GetItem(node, &MF_TOPONODE_STREAM_DESCRIPTOR, NULL);
+                if (FAILED(hr = IMFAttributes_GetItem(node->attributes, &MF_TOPONODE_STREAM_DESCRIPTOR, NULL)))
+                    return hr;
                 break;
             default:
                 ;
         }
-
-        IMFTopologyNode_Release(node);
-        if (FAILED(hr))
-            return hr;
     }
 
     if (FAILED(hr = MFCreateTopology(output_topology)))
-- 
2.28.0

