From 921b962ffd346cdcd3764a4182a34d81d5b9c3c7 Mon Sep 17 00:00:00 2001
From: Derek Lesho <dlesho@codeweavers.com>
Date: Tue, 11 Aug 2020 13:41:15 -0500
Subject: [PATCH] winegstreamer: Implement MF_SD_LANGUAGE.

Signed-off-by: Derek Lesho <dlesho@codeweavers.com>
---
 dlls/winegstreamer/media_source.c | 33 +++++++++++++++++++++++++++++--
 1 file changed, 31 insertions(+), 2 deletions(-)

diff --git a/dlls/winegstreamer/media_source.c b/dlls/winegstreamer/media_source.c
index 1d2c999b7e1..83217ebb5b7 100644
--- a/dlls/winegstreamer/media_source.c
+++ b/dlls/winegstreamer/media_source.c
@@ -1647,8 +1647,12 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, struct media_
         /* TODO: consider streams which don't start at T=0 */
         for (unsigned int i = 0; i < object->stream_count; i++)
         {
-            GstQuery *query = gst_query_new_duration(GST_FORMAT_TIME);
-            if (gst_pad_query(object->streams[i]->their_src, query))
+            struct media_stream *stream = object->streams[i];
+            GstEvent *tag_event;
+            GstQuery *query;
+
+            query = gst_query_new_duration(GST_FORMAT_TIME);
+            if (gst_pad_query(stream->their_src, query))
             {
                 gint64 stream_pres_time;
                 gst_query_parse_duration(query, NULL, &stream_pres_time);
@@ -1662,6 +1666,31 @@ static HRESULT media_source_constructor(IMFByteStream *bytestream, struct media_
             {
                 WARN("Unable to get presentation time of stream %u\n", i);
             }
+
+            tag_event = gst_pad_get_sticky_event(stream->their_src, GST_EVENT_TAG, 0);
+            if (tag_event)
+            {
+                GstTagList *tag_list;
+                gchar *language_code = NULL;
+
+                gst_event_parse_tag(tag_event, &tag_list);
+
+                gst_tag_list_get_string(tag_list, "language-code", &language_code);
+                if (language_code)
+                {
+                    DWORD char_count = MultiByteToWideChar(CP_UTF8, 0, language_code, -1, NULL, 0);
+                    if (char_count)
+                    {
+                        WCHAR *language_codeW = heap_alloc(char_count * sizeof(WCHAR));
+                        MultiByteToWideChar(CP_UTF8, 0, language_code, -1, language_codeW, char_count);
+                        IMFStreamDescriptor_SetString(stream->descriptor, &MF_SD_LANGUAGE, language_codeW);
+                        heap_free(language_codeW);
+                    }
+                    g_free(language_code);
+                }
+
+                gst_event_unref(tag_event);
+            }
         }
 
         if (object->stream_count)
-- 
2.28.0

