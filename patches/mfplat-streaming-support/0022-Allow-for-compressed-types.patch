From 8ee3ba837dc7dfa786f64ae6a4415c6ac3c3d842 Mon Sep 17 00:00:00 2001
From: Derek Lesho <dlesho@codeweavers.com>
Date: Wed, 2 Dec 2020 17:12:22 -0500
Subject: [PATCH] Allow for compressed types.

---
 dlls/winegstreamer/mfplat.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/dlls/winegstreamer/mfplat.c b/dlls/winegstreamer/mfplat.c
index 3a63c9ddc99..2ef734f3a22 100644
--- a/dlls/winegstreamer/mfplat.c
+++ b/dlls/winegstreamer/mfplat.c
@@ -778,22 +778,20 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
     {
         DWORD rate = -1, channels = -1, channel_mask = -1;
 
-        if (FAILED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, &rate)))
-        {
-            ERR("Sample rate not set.\n");
-            return NULL;
-        }
-        if (FAILED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_NUM_CHANNELS, &channels)))
-        {
-            ERR("Channel count not set.\n");
-            return NULL;
-        }
+        IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_SAMPLES_PER_SECOND, &rate);
+        IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_NUM_CHANNELS, &channels);
         IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_CHANNEL_MASK, &channel_mask);
 
         if (IsEqualGUID(&subtype, &MFAudioFormat_Float))
         {
             GstAudioInfo float_info;
 
+            if (rate == -1 || channels == -1)
+            {
+                ERR("Incomplete media type.\n");
+                return NULL;
+            }
+
             gst_audio_info_set_format(&float_info, GST_AUDIO_FORMAT_F32LE, rate, channels, NULL);
             output = gst_audio_info_to_caps(&float_info);
         }
@@ -803,6 +801,12 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
             GstAudioInfo pcm_info;
             DWORD bits_per_sample;
 
+            if (rate == -1 || channels == -1)
+            {
+                ERR("Incomplete media type.\n");
+                return NULL;
+            }
+
             if (SUCCEEDED(IMFMediaType_GetUINT32(type, &MF_MT_AUDIO_BITS_PER_SAMPLE, &bits_per_sample)))
             {
                 pcm_format = gst_audio_format_build_integer(bits_per_sample > 8, G_LITTLE_ENDIAN, bits_per_sample, bits_per_sample);
@@ -822,6 +826,10 @@ GstCaps *caps_from_mf_media_type(IMFMediaType *type)
             return NULL;
         }
 
+        if (rate != -1)
+            gst_caps_set_simple(output, "rate", G_TYPE_INT, rate, NULL);
+        if (channels != -1)
+            gst_caps_set_simple(output, "channels", G_TYPE_INT, channels, NULL);
         if (channel_mask != -1)
             gst_caps_set_simple(output, "channel-mask", GST_TYPE_BITMASK, (guint64) channel_mask, NULL);
 
-- 
2.29.2

